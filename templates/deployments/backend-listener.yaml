apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-listener
  labels:
    {{- include "3scale-amp-chart.labels" . | nindent 4 }}
    threescale_component: backend
    threescale_component_element: listener
spec:
  replicas: 1
  selector:
    matchLabels:
      threescale_component: backend
      threescale_component_element: listener
  strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
  template:
    metadata:
    {{- with .Values.backendListener.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "3scale-amp-chart.selectorLabels" . | nindent 8 }}
        threescale_component: backend
        threescale_component_element: listener
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "3scale-amp-chart.serviceAccountName" . }}
      containers:
        - name: backend-listener
          args:
            - bin/3scale_backend
            - start
            - -e
            - production
            - -p
            - "3000"
            - -x
            - /dev/stdout
          env:
            - name: CONFIG_REDIS_PROXY
              valueFrom:
                secretKeyRef:
                  key: REDIS_STORAGE_URL
                  name: backend-redis
            - name: CONFIG_REDIS_SENTINEL_HOSTS
              valueFrom:
                secretKeyRef:
                  key: REDIS_STORAGE_SENTINEL_HOSTS
                  name: backend-redis
            - name: CONFIG_REDIS_SENTINEL_ROLE
              valueFrom:
                secretKeyRef:
                  key: REDIS_STORAGE_SENTINEL_ROLE
                  name: backend-redis
            - name: CONFIG_QUEUES_MASTER_NAME
              valueFrom:
                secretKeyRef:
                  key: REDIS_QUEUES_URL
                  name: backend-redis
            - name: CONFIG_QUEUES_SENTINEL_HOSTS
              valueFrom:
                secretKeyRef:
                  key: REDIS_QUEUES_SENTINEL_HOSTS
                  name: backend-redis
            - name: CONFIG_QUEUES_SENTINEL_ROLE
              valueFrom:
                secretKeyRef:
                  key: REDIS_QUEUES_SENTINEL_ROLE
                  name: backend-redis
            - name: RACK_ENV
              valueFrom:
                configMapKeyRef:
                  key: RACK_ENV
                  name: backend-environment
            - name: PUMA_WORKERS
              value: "16"
            - name: CONFIG_INTERNAL_API_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: backend-internal-api
            - name: CONFIG_INTERNAL_API_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: backend-internal-api
          image: {{ .Values.backendListener.image }}
          imagePullPolicy: {{ .Values.backendListener.imagePullPolicy }}
          resources:
            {{- toYaml .Values.backendListener.resources | nindent 12 }}
          ports:
            - containerPort: 3000
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            tcpSocket:
              port: 3000
          readinessProbe:
            httpGet:
              path: /status
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 5
      {{- with .Values.backendListener.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backendListener.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backendListener.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}