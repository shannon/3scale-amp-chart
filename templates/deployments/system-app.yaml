apiVersion: apps/v1
kind: Deployment
metadata:
  name: system-app
  labels:
    {{- include "3scale-amp-chart.labels" . | nindent 4 }}
    threescale_component: system
    threescale_component_element: app
spec:
  replicas: 1
  selector:
    matchLabels:
      threescale_component: system
      threescale_component_element: app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
    {{- with .Values.systemApp.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "3scale-amp-chart.selectorLabels" . | nindent 8 }}
        threescale_component: system
        threescale_component_element: app
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "3scale-amp-chart.serviceAccountName" . }}
      volumes:
        - name: system-storage
          persistentVolumeClaim:
            claimName: system-storage
        - name: system-config 
          configMap:
            name: system-config 
            items:
              - key: zync.yml
                path: zync.yml
              - key: rolling_updates.yml
                path: rolling_updates.yml
              - key: service_discovery.yml
                path: service_discovery.yml          
      initContainers:
        - name: deploy
          command:
            - bash
            - -c
            - bundle exec rake boot openshift:deploy
          env:
            {{- include "3scale-amp-chart.systemAppEnvironment" . | nindent 12 }}
          image: {{ .Values.systemApp.image }}
          imagePullPolicy: {{ .Values.systemApp.imagePullPolicy }}
          resources:
            {{- toYaml .Values.systemApp.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /opt/system/public/system
              name: system-storage
            - mountPath: /opt/system-extra-configs
              name: system-config
        - name: post-deploy
          command:
            - bash
            - -c
            - bundle exec rake boot openshift:post_deploy
          env:
            {{- include "3scale-amp-chart.systemAppEnvironment" . | nindent 12 }}
          image: {{ .Values.systemApp.image }}
          imagePullPolicy: {{ .Values.systemApp.imagePullPolicy }}
          resources:
            {{- toYaml .Values.systemApp.resources | nindent 12 }}
      containers:
        - name: system-master
          args:
            - env
            - TENANT_MODE=master
            - PORT=3002
            - container-entrypoint
            - bundle
            - exec
            - unicorn
            - -c
            - config/unicorn.rb
          env:
            {{- include "3scale-amp-chart.systemAppEnvironment" . | nindent 12 }}
          image: {{ .Values.systemApp.image }}
          imagePullPolicy: {{ .Values.systemApp.imagePullPolicy }}
          resources:
            {{- toYaml .Values.systemApp.resources | nindent 12 }}
          ports:
            - name: master
              containerPort: 3002
              protocol: TCP
          livenessProbe:
            failureThreshold: 40
            initialDelaySeconds: 40
            periodSeconds: 10
            tcpSocket:
              port: master
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 10
            httpGet:
              httpHeaders:
              - name: X-Forwarded-Proto
                value: https
              path: /check.txt
              port: master
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /opt/system/public/system
              name: system-storage
            - mountPath: /opt/system-extra-configs
              name: system-config
      {{- with .Values.systemApp.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.systemApp.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.systemApp.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}


{{- define "3scale-amp-chart.systemAppEnvironment" -}}
- name: AMP_RELEASE
  valueFrom:
    configMapKeyRef:
      key: AMP_RELEASE
      name: system-environment
- name: APICAST_REGISTRY_URL
  valueFrom:
    configMapKeyRef:
      key: APICAST_REGISTRY_URL
      name: system-environment
- name: FORCE_SSL
  valueFrom:
    configMapKeyRef:
      key: FORCE_SSL
      name: system-environment
- name: PROVIDER_PLAN
  valueFrom:
    configMapKeyRef:
      key: PROVIDER_PLAN
      name: system-environment
- name: RAILS_ENV
  valueFrom:
    configMapKeyRef:
      key: RAILS_ENV
      name: system-environment
- name: RAILS_LOG_LEVEL
  valueFrom:
    configMapKeyRef:
      key: RAILS_LOG_LEVEL
      name: system-environment
- name: RAILS_LOG_TO_STDOUT
  valueFrom:
    configMapKeyRef:
      key: RAILS_LOG_TO_STDOUT
      name: system-environment
- name: SSL_CERT_DIR
  valueFrom:
    configMapKeyRef:
      key: SSL_CERT_DIR
      name: system-environment
- name: THINKING_SPHINX_PORT
  valueFrom:
    configMapKeyRef:
      key: THINKING_SPHINX_PORT
      name: system-environment
- name: THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE
  valueFrom:
    configMapKeyRef:
      key: THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE
      name: system-environment
- name: THREESCALE_SUPERDOMAIN
  valueFrom:
    configMapKeyRef:
      key: THREESCALE_SUPERDOMAIN
      name: system-environment
- name: DATABASE_PROTO
  valueFrom:
    secretKeyRef:
      key: proto
      name: system-database
- name: DATABASE_URL
  valueFrom:
    secretKeyRef:
      key: url
      name: system-database
- name: MASTER_DOMAIN
  valueFrom:
    secretKeyRef:
      key: MASTER_DOMAIN
      name: system-seed
- name: MASTER_USER
  valueFrom:
    secretKeyRef:
      key: MASTER_USER
      name: system-seed
- name: MASTER_PASSWORD
  valueFrom:
    secretKeyRef:
      key: MASTER_PASSWORD
      name: system-seed
- name: ADMIN_ACCESS_TOKEN
  valueFrom:
    secretKeyRef:
      key: ADMIN_ACCESS_TOKEN
      name: system-seed
- name: USER_LOGIN
  valueFrom:
    secretKeyRef:
      key: ADMIN_USER
      name: system-seed
- name: USER_PASSWORD
  valueFrom:
    secretKeyRef:
      key: ADMIN_PASSWORD
      name: system-seed
- name: USER_EMAIL
  valueFrom:
    secretKeyRef:
      key: ADMIN_EMAIL
      name: system-seed
- name: TENANT_NAME
  valueFrom:
    secretKeyRef:
      key: TENANT_NAME
      name: system-seed
- name: THINKING_SPHINX_ADDRESS
  value: system-sphinx
- name: THINKING_SPHINX_CONFIGURATION_FILE
  value: /tmp/sphinx.conf
- name: EVENTS_SHARED_SECRET
  valueFrom:
    secretKeyRef:
      key: password
      name: system-events-hook
- name: RECAPTCHA_PUBLIC_KEY
  valueFrom:
    secretKeyRef:
      key: publicKey
      name: system-recaptcha
- name: RECAPTCHA_PRIVATE_KEY
  valueFrom:
    secretKeyRef:
      key: privateKey
      name: system-recaptcha
- name: SECRET_KEY_BASE
  valueFrom:
    secretKeyRef:
      key: secretKeyBase
      name: system-app
- name: MEMCACHE_SERVERS
  valueFrom:
    secretKeyRef:
      key: SERVERS
      name: system-memcache
- name: REDIS_URL
  valueFrom:
    secretKeyRef:
      key: URL
      name: system-redis
- name: MESSAGE_BUS_REDIS_URL
  valueFrom:
    secretKeyRef:
      key: MESSAGE_BUS_URL
      name: system-redis
- name: REDIS_NAMESPACE
  valueFrom:
    secretKeyRef:
      key: NAMESPACE
      name: system-redis
- name: MESSAGE_BUS_REDIS_NAMESPACE
  valueFrom:
    secretKeyRef:
      key: MESSAGE_BUS_NAMESPACE
      name: system-redis
- name: REDIS_SENTINEL_HOSTS
  valueFrom:
    secretKeyRef:
      key: SENTINEL_HOSTS
      name: system-redis
- name: REDIS_SENTINEL_ROLE
  valueFrom:
    secretKeyRef:
      key: SENTINEL_ROLE
      name: system-redis
- name: MESSAGE_BUS_REDIS_SENTINEL_HOSTS
  valueFrom:
    secretKeyRef:
      key: MESSAGE_BUS_SENTINEL_HOSTS
      name: system-redis
- name: MESSAGE_BUS_REDIS_SENTINEL_ROLE
  valueFrom:
    secretKeyRef:
      key: MESSAGE_BUS_SENTINEL_ROLE
      name: system-redis
- name: BACKEND_REDIS_URL
  valueFrom:
    secretKeyRef:
      key: REDIS_STORAGE_URL
      name: backend-redis
- name: BACKEND_REDIS_SENTINEL_HOSTS
  valueFrom:
    secretKeyRef:
      key: REDIS_STORAGE_SENTINEL_HOSTS
      name: backend-redis
- name: BACKEND_REDIS_SENTINEL_ROLE
  valueFrom:
    secretKeyRef:
      key: REDIS_STORAGE_SENTINEL_ROLE
      name: backend-redis
- name: APICAST_BACKEND_ROOT_ENDPOINT
  valueFrom:
    secretKeyRef:
      key: route_endpoint
      name: backend-listener
- name: BACKEND_ROUTE
  valueFrom:
    secretKeyRef:
      key: route_endpoint
      name: backend-listener
- name: SMTP_ADDRESS
  valueFrom:
    secretKeyRef:
      key: address
      name: system-smtp
- name: SMTP_USER_NAME
  valueFrom:
    secretKeyRef:
      key: username
      name: system-smtp
- name: SMTP_PASSWORD
  valueFrom:
    secretKeyRef:
      key: password
      name: system-smtp
- name: SMTP_DOMAIN
  valueFrom:
    secretKeyRef:
      key: domain
      name: system-smtp
- name: SMTP_PORT
  valueFrom:
    secretKeyRef:
      key: port
      name: system-smtp
- name: SMTP_AUTHENTICATION
  valueFrom:
    secretKeyRef:
      key: authentication
      name: system-smtp
- name: SMTP_OPENSSL_VERIFY_MODE
  valueFrom:
    secretKeyRef:
      key: openssl.verify.mode
      name: system-smtp
- name: APICAST_ACCESS_TOKEN
  valueFrom:
    secretKeyRef:
      key: accessToken
      name: system-master-apicast
- name: ZYNC_AUTHENTICATION_TOKEN
  valueFrom:
    secretKeyRef:
      key: authenticationToken
      name: zync
- name: CONFIG_INTERNAL_API_USER
  valueFrom:
    secretKeyRef:
      key: username
      name: backend-internal-api
- name: CONFIG_INTERNAL_API_PASSWORD
  valueFrom:
    secretKeyRef:
      key: password
      name: backend-internal-api
- name: MASTER_ACCESS_TOKEN
  valueFrom:
    secretKeyRef:
      key: MASTER_ACCESS_TOKEN
      name: system-seed
{{- end }}